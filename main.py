import os
import json
import requests

# Add dotenv for local development
if not os.getenv("GITHUB_ACTIONS"):
    try:
        from dotenv import load_dotenv
        load_dotenv()
    except ImportError:
        print("python-dotenv not installed. Install it for local development.")

from ai_reviewer.openai import review_diff_with_openai


def post_pr_comment(pr_data: dict, message: str):
    comments_url = pr_data.get("comments_url")
    token = os.getenv("GITHUB_TOKEN")

    if not comments_url or not token:
        print("❌ Missing comments URL or GitHub token.")
        return

    headers = {
        "Authorization": f"Bearer {token}",
        "Accept": "application/vnd.github+json",
    }

    payload = {
        "body": message + "\n\n" + "*This comment was generated by AI. Please review and update as needed.*"
    }

    resp = requests.post(comments_url, headers=headers, json=payload)
    if resp.status_code == 201:
        print("✅ Comment posted successfully!")
    else:
        print(f"❌ Failed to post comment: {resp.status_code} - {resp.text}")


def main():
    event_path = os.getenv("GITHUB_EVENT_PATH")
    if not event_path:
        print("GITHUB_EVENT_PATH is not set.")
        return

    with open(event_path, 'r') as f:
